@use '../core';
@use 'sass:map';

// -----------------------------------------------------------------------------
// Frame
// Frame makes its child element responsive with a set aspect ratio. Often used
// for media elements.
// -----------------------------------------------------------------------------

$object-x: map.get(core.$compiled-config, layouts, frame, object-x);
$object-y: map.get(core.$compiled-config, layouts, frame, object-y);
$object-fit: map.get(core.$compiled-config, layouts, frame, object-fit);
$ratio: map.get(core.$compiled-config, layouts, frame, ratio);

.#{core.$layout-prefix}frame {
	--object-x: #{$object-x};
	--object-y: #{$object-y};
	--object-fit: #{$object-fit};
	--ratio: #{$ratio};

	position: relative;
	width: 100%;
	overflow: hidden;

	@supports (aspect-ratio: var(--ratio)) {
		aspect-ratio: var(--ratio);
	}

	@supports not (aspect-ratio: var(--ratio)) {
		padding-bottom: calc(100% / (var(--ratio)));
	}

	> * {
		position: absolute;
		top: 0;
		right: 0;
		bottom: 0;
		left: 0;
		width: 100%;
		height: 100%;
		object-fit: var(--object-fit);
		object-position: var(--object-x) var(--object-y);
	}

	@if (core.$merged-breakpoints != null) {
		$prev-breakpoint: null;
		@each $breakpoint in map.keys(core.$merged-breakpoints) {
			@include core.media($breakpoint) {
				--#{$breakpoint}-ratio: var(--#{$prev-breakpoint}ratio);
				--#{$breakpoint}-object-x: var(--#{$prev-breakpoint}object-x);
				--#{$breakpoint}-object-y: var(--#{$prev-breakpoint}object-y);
				--#{$breakpoint}-object-fit: var(--#{$prev-breakpoint}object-fit);

				@supports (aspect-ratio: var(--ratio)) {
					aspect-ratio: var(--#{$breakpoint}-ratio);
				}

				@supports not (aspect-ratio: var(--ratio)) {
					padding-bottom: calc(100% / (var(--#{$breakpoint}-ratio)));
				}

				> * {
					object-fit: var(--#{$breakpoint}-object-fit);
					object-position: var(--#{$breakpoint}-object-x) var(--#{$breakpoint}-object-y);
				}
			}
			$prev-breakpoint: #{$breakpoint}-;
		}
	}
}

